<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="/css/adminDashboard.css">
</head>
<body>
    <div class="navbar">
        <div class="navbar-left">
            <a href="#">Homepage</a>
        </div>
        <div class="navbar-right">
            <a href="/">Sign Out</a>
        </div>
    </div>
    
    <div class="container">
        <% if (typeof error !== 'undefined' && error) { %>
            <div class="error-message">
                <%= error %>
            </div>
        <% } %>

        <h1>Admin Dashboard</h1>
        
        <div class="navbar-tabs">
            <a href="#authorization" class="tab-link active" data-tab="authorization">Authorization</a>
            <a href="#medicines" class="tab-link" data-tab="medicines">Medicines</a>
        </div>
        
        <!-- Authorization Tab Content -->
        <div id="authorization" class="tab-content active">
            <div class="dashboard-section">
                <h3>Pending Doctor Requests</h3>
                <% if (pendingDoctors && pendingDoctors.length > 0) { %>
                    <table class="doctors-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Specialization</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% pendingDoctors.forEach(doctor => { %>
                                <tr>
                                    <td><%= doctor.doctorid %></td>
                                    <td><%= doctor.fullname %></td>
                                    <td><%= doctor.email %></td>
                                    <td><%= doctor.specialization %></td>
                                    <td class="action-buttons">
                                        <button class="approve-btn" data-id="<%= doctor.doctorid %>">Approve</button>
                                        <button class="reject-btn" data-id="<%= doctor.doctorid %>">Reject</button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                <% } else { %>
                    <p>No pending doctor requests</p>
                <% } %>
            </div>
        </div>
        
        <!-- Medicines Tab Content -->
        <div id="medicines" class="tab-content">
            <div class="dashboard-section">
                <h3>Medicines Management</h3>
                <p>Medicine management section. Content will be added soon.</p>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set authorization tab as active by default
            document.getElementById('authorization').classList.add('active');
            document.querySelector('[data-tab="authorization"]').classList.add('active');
            
            // Tab navigation
            document.querySelectorAll('.tab-link').forEach(tab => {
                tab.addEventListener('click', function(e) {
                    e.preventDefault();
                    const tabId = this.getAttribute('data-tab');
                    
                    // Hide all tab contents
                    document.querySelectorAll('.tab-content').forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    // Remove active class from all tabs
                    document.querySelectorAll('.tab-link').forEach(tabLink => {
                        tabLink.classList.remove('active');
                    });
                    
                    // Show selected tab content and mark tab as active
                    document.getElementById(tabId).classList.add('active');
                    this.classList.add('active');
                });
            });

            // Event listener for approve buttons
            document.querySelectorAll('.approve-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const doctorId = this.getAttribute('data-id');
                    approveDoctor(doctorId, this);
                });
            });

            // Event listener for reject buttons
            document.querySelectorAll('.reject-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const doctorId = this.getAttribute('data-id');
                    rejectDoctor(doctorId, this);
                });
            });
            
            // Function to approve doctor
            function approveDoctor(doctorId, buttonElement) {
                fetch(`/approve-doctor/${doctorId}`, {  // Removed /admin prefix
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Doctor approved successfully');
                        // Remove the row from the table
                        buttonElement.closest('tr').remove();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while approving the doctor');
                });
            }
            
            // Function to reject doctor
            function rejectDoctor(doctorId, buttonElement) {
                fetch(`/reject-doctor/${doctorId}`, {  // Removed /admin prefix
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Doctor rejected successfully');
                        // Remove the row from the table
                        buttonElement.closest('tr').remove();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while rejecting the doctor');
                });
            }
        });
    </script>
</body>
</html>
